name: Game Simulation Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight
  workflow_dispatch:
    inputs:
      senators:
        description: 'Number of senators to simulate'
        required: false
        default: 5
        type: number
      debate-rounds:
        description: 'Number of debate rounds per topic'
        required: false
        default: 2
        type: number
      topics:
        description: 'Number of topics to debate'
        required: false
        default: 1
        type: number
      year:
        description: 'Year in Roman history (negative for BCE)'
        required: false
        default: -100
        type: number
      api-mode:
        description: 'API mode (auto, mock, real)'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - mock
          - real

jobs:
  simulate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Run non-interactive game simulation
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # Set non-interactive test mode for LLM providers
        export ROMAN_SENATE_TEST_MODE=true
        
        # Determine API mode based on workflow dispatch input or default to auto
        API_MODE="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.api-mode || 'auto' }}"
        
        echo "API Mode: $API_MODE"
        
        if [ "$API_MODE" = "mock" ]; then
          # Force mock provider regardless of API key
          echo "Using mock provider for simulation (explicit selection)"
          export ROMAN_SENATE_MOCK_PROVIDER=true
        
        elif [ "$API_MODE" = "real" ]; then
          # Force real API
          if [ -n "$OPENAI_API_KEY" ]; then
            echo "Using real OpenAI API for simulation (explicit selection)"
            export ROMAN_SENATE_MOCK_PROVIDER=false
          else
            echo "ERROR: Real API mode selected but no OPENAI_API_KEY is set in secrets"
            echo "Please add the OPENAI_API_KEY secret to your repository"
            exit 1
          fi
        
        else
          # Auto mode - use real API if key exists, otherwise mock
          if [ -n "$OPENAI_API_KEY" ]; then
            echo "Using real OpenAI API for simulation (auto mode with key available)"
            export ROMAN_SENATE_MOCK_PROVIDER=false
          else
            echo "No API key found - using mock provider (auto mode)"
            export ROMAN_SENATE_MOCK_PROVIDER=true
          fi
        fi
        # Run a complete game simulation with parameters from workflow dispatch or defaults
        python -m roman_senate.cli simulate \
          --senators ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.senators || 5 }} \
          --debate-rounds ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debate-rounds || 2 }} \
          --topics ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.topics || 1 }} \
          --year ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.year || -100 }} \
          --non-interactive
          